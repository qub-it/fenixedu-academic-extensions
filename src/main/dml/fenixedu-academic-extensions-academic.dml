package org.fenixedu.academic.domain;

enum org.fenixedu.academic.domain.GradeScaleEnum as GradeScaleEnumAcademicExtensions;
enum org.fenixedu.academic.domain.evaluation.markSheet.CompetenceCourseMarkSheetStateEnum as CompetenceCourseMarkSheetStateEnum;
enum org.fenixedu.academic.domain.evaluation.markSheet.CompetenceCourseMarkSheetChangeRequestStateEnum as CompetenceCourseMarkSheetChangeRequestStateEnum;
enum org.fenixedu.academic.domain.evaluation.season.EvaluationSeasonPeriodType as EvaluationSeasonPeriodType;
enum org.fenixedu.academic.domain.enrolment.period.AcademicEnrolmentPeriodType as AcademicEnrolmentPeriodType;
enum org.fenixedu.academic.domain.enrolment.period.AutomaticEnrolment as AutomaticEnrolment;
 

valueType org.fenixedu.academic.domain.ShiftTypes as ShiftTypes {
    externalizeWith {
        JsonElement toJson();
    }
}

external class .org.fenixedu.bennu.io.domain.GenericFile;
external class .org.fenixedu.academic.domain.ExecutionDegree;

class EnrolmentType {
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
}
	relation EnrolmentTypeRoot {
	    .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
	    EnrolmentType playsRole enrolmentTypes { multiplicity *; }
	}

// ==================== BEGIN: Evaluations ====================

class evaluation.season.EvaluationSeasonPeriod {
	EvaluationSeasonPeriodType periodType;
	protected JsonElement intervalsRaw;
}


class evaluation.config.MarkSheetSettings {
	boolean allowTeacherToChooseCertifier;
	int requiredNumberOfShifts;
	boolean limitCertifierToResponsibleTeacher;
	boolean limitCreationToResponsibleTeacher;
	String markSheetTemplateCode;
}

relation MarkSheetSettingsBennuRoot {
	.org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    evaluation.config.MarkSheetSettings playsRole markSheetSettings { multiplicity 0..1; }	
}


class evaluation.config.CompetenceCourseMarkSheetTemplateFile extends .org.fenixedu.bennu.io.domain.GenericFile {

}

relation CompetenceCourseMarkSheetTemplateFileMarkSheetSettings {

	evaluation.config.MarkSheetSettings playsRole markSheetSettings {
    	multiplicity 1..1;
    }
    
    evaluation.config.CompetenceCourseMarkSheetTemplateFile playsRole templateFile {
        multiplicity 0..1;
    }
}


relation EvaluationSeasonPeriodRelation {
    protected evaluation.season.EvaluationSeasonPeriod playsRole evaluationSeasonPeriod {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.EvaluationSeason playsRole season {
        multiplicity 1;
    }
}

relation EvaluationSeasonOccupationPeriod {
    protected evaluation.season.EvaluationSeasonPeriod playsRole evaluationSeasonPeriod {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.OccupationPeriod playsRole occupationPeriod {
        multiplicity 1;
    }
}

relation EvaluationSeasonPeriodExecutionInterval {
    evaluation.season.EvaluationSeasonPeriod playsRole evaluationSeasonPeriod {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.ExecutionInterval playsRole executionSemester {
        multiplicity 1;
    }
}

relation EvaluationSeasonPeriodExecutionDegree {
	.org.fenixedu.academic.domain.ExecutionDegree playsRole executionDegrees { multiplicity *; }	
    evaluation.season.EvaluationSeasonPeriod playsRole evaluationSeasonPeriods { multiplicity *; }	
}

class evaluation.season.EvaluationSeasonInformation {
	Integer seasonOrder;
	boolean active;
	boolean requiresEnrolmentEvaluation;
	boolean supportsEmptyGrades;
	boolean supportsTeacherConfirmation;
	Integer minPastYearsToAcceptImprovementEnrolments;
	Integer maxPastYearsToAcceptImprovementEnrolments;	
}

relation EvaluationSeasonInformationRelation {
    evaluation.season.EvaluationSeasonInformation playsRole information {
        multiplicity 1..1;
    }

    .org.fenixedu.academic.domain.EvaluationSeason playsRole season {
        multiplicity 1..1;
    }
}

class evaluation.season.rule.EvaluationSeasonRule {
}

	class evaluation.season.rule.BlockingTreasuryEventInDebt extends evaluation.season.rule.EvaluationSeasonRule {
	}

	class evaluation.season.rule.PreviousSeasonEvaluation extends evaluation.season.rule.EvaluationSeasonRule {
	}

	class evaluation.season.rule.PreviousSeasonMinimumGrade extends evaluation.season.rule.EvaluationSeasonRule {
		Grade minimum;
	}

	class evaluation.season.rule.PreviousSeasonBlockingGrade extends evaluation.season.rule.EvaluationSeasonRule {
		Grade blocking;
	}

    class evaluation.season.rule.GradeScaleValidator extends evaluation.season.rule.EvaluationSeasonRule {
        GradeScaleEnum gradeScaleEnum;
        String gradeValues;
        LocalizedString ruleDescription;
        boolean appliesToCurriculumAggregatorEntry;
    }
    	
    	relation GradeScaleValidatorGradeScale {
			curriculum.grade.GradeScale playsRole gradeScale {
				multiplicity 0..1;
			}

			evaluation.season.rule.GradeScaleValidator playsRole {
				multiplicity *;
			}    		
    	}

    class evaluation.season.rule.EvaluationSeasonShiftType extends evaluation.season.rule.EvaluationSeasonRule {
        ShiftTypes shiftTypes (REQUIRED);
    }

    class evaluation.season.rule.EvaluationSeasonStatuteType extends evaluation.season.rule.EvaluationSeasonRule {
    }

relation EvaluationSeasonRuleRelation {
    evaluation.season.rule.EvaluationSeasonRule playsRole rules {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.EvaluationSeason playsRole season {
        multiplicity 1;
    }
}

relation EvaluationSeasonStatuteTypeRelation {
    evaluation.season.rule.EvaluationSeasonStatuteType playsRole evaluationSeasonStatuteTypeRules {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.student.StatuteType playsRole statuteTypes {
        multiplicity 1..*;
    }
}

relation GradeScaleValidatorDegreeTypes {
    evaluation.season.rule.GradeScaleValidator playsRole gradeScaleValidator {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.degree.DegreeType playsRole degreeType {
        multiplicity 1..*;
    }
}

class evaluation.markSheet.CompetenceCourseMarkSheet {
    LocalDate evaluationDate;
    LocalDate expireDate;
    GradeScaleEnumAcademicExtensions gradeScaleEnum;
    boolean printed;
    boolean includeStudentsNotEnrolledInOtherEvaluations;
}

	relation CompetenceCourseMarkSheetGradeScale {
		curriculum.grade.GradeScale playsRole gradeScale {
			multiplicity 0..1;
		}
		
		evaluation.markSheet.CompetenceCourseMarkSheet playsRole {
			multiplicity *;
		}
	}

class evaluation.markSheet.CompetenceCourseMarkSheetStateChange {
    CompetenceCourseMarkSheetStateEnum state;
    DateTime date;
    String reason;
    boolean byTeacher;
}

class evaluation.markSheet.CompetenceCourseMarkSheetSnapshot {
	String competenceCourseCode;
	LocalizedString competenceCourseName;
	String executionSemester;
	LocalizedString evaluationSeason;
	String certifier;
	LocalDate evaluationDate;
	DateTime evaluationDateTime;
	String checkSum;
	String shifts;
}

class evaluation.markSheet.CompetenceCourseMarkSheetSnapshotEntry {
    Integer studentNumber;
    String studentName;
    Grade grade;
    String degreeCode;
    LocalizedString degreeName;
    String shifts;
}

class evaluation.markSheet.CompetenceCourseMarkSheetChangeRequest {
    CompetenceCourseMarkSheetChangeRequestStateEnum state;
    String reason;
    DateTime requestDate;
    String comments;
    DateTime responseDate;
}

relation CompetenceCourseMarkSheetStateChangeSnapshot {
	evaluation.markSheet.CompetenceCourseMarkSheetSnapshot playsRole snapshot {
		multiplicity 0..1;
	}
	
	evaluation.markSheet.CompetenceCourseMarkSheetStateChange playsRole stateChange {
		multiplicity 1..1;
	}
}

relation CompetenceCourseMarkSheetSnapshotEntryRelation {
	protected evaluation.markSheet.CompetenceCourseMarkSheetSnapshot playsRole snapshot {
		multiplicity 1..1;
	}
	
	evaluation.markSheet.CompetenceCourseMarkSheetSnapshotEntry playsRole entry {
		multiplicity 1..*;
	}
}

relation CompetenceCourseMarkSheetStateChangeRelation {
	evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
		multiplicity 1..1;
	}
	
	evaluation.markSheet.CompetenceCourseMarkSheetStateChange playsRole stateChange {
		multiplicity 1..*;
	}
}

relation CompetenceCourseMarkSheetStateChangeResponsible {
    protected evaluation.markSheet.CompetenceCourseMarkSheetStateChange playsRole competenceCourseMarkSheetChange {
        multiplicity *;
    }
    
    .org.fenixedu.academic.domain.Person playsRole responsible {
		multiplicity 1..1;
	}
}

relation CompetenceCourseMarkSheetRelation {
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }
    
    .org.fenixedu.academic.domain.CompetenceCourse playsRole competenceCourse {
		multiplicity 1..1;
	}
}

relation CompetenceCourseMarkSheetExecutionCourse {
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }
    
    .org.fenixedu.academic.domain.ExecutionCourse playsRole executionCourse {
		multiplicity 0..1;
	}
}

relation CompetenceCourseMarkSheetShift {
    protected evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }
    
    .org.fenixedu.academic.domain.Shift playsRole shift {
		multiplicity *;
	}
}

relation CompetenceCourseMarkSheetEnrolmentEvaluation {
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
		multiplicity 0..1;
	}
    
    .org.fenixedu.academic.domain.EnrolmentEvaluation playsRole enrolmentEvaluation {
        multiplicity *;
    }
}

relation CompetenceCourseMarkSheetEvaluation {
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.Evaluation playsRole courseEvaluation {
        multiplicity 0..1;
    }
}

relation CompetenceCourseMarkSheetEvaluationSeason {
    protected evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }
    
    .org.fenixedu.academic.domain.EvaluationSeason playsRole evaluationSeason {
        multiplicity 1..1;
    }
}

relation CompetenceCourseMarkSheetExecutionInterval {
    .org.fenixedu.academic.domain.ExecutionInterval playsRole executionSemester {
        multiplicity 1..1;
    }
    
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }
}

relation CompetenceCourseMarkSheetCertifier {
    evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity *;
    }

    .org.fenixedu.academic.domain.Person playsRole certifier {
		multiplicity 1..1;
	}
}

relation CompetenceCourseMarkSheetCompetenceCourseMarkSheetChangeRequest {

	evaluation.markSheet.CompetenceCourseMarkSheet playsRole competenceCourseMarkSheet {
        multiplicity 1..1;
    }
    
	evaluation.markSheet.CompetenceCourseMarkSheetChangeRequest playsRole changeRequests {
		multiplicity *;
	}
	
}

relation CompetenceCourseMarkSheetChangeRequestRequester {

	.org.fenixedu.academic.domain.Person playsRole requester {
        multiplicity 1..1;
    }
    
	evaluation.markSheet.CompetenceCourseMarkSheetChangeRequest playsRole requestedCompetenceCourseMarkSheetChangeRequests {
		multiplicity *;
	}
	
}

relation CompetenceCourseMarkSheetChangeRequestResponder {

	.org.fenixedu.academic.domain.Person playsRole responder {
        multiplicity 0..1;
    }
    
	evaluation.markSheet.CompetenceCourseMarkSheetChangeRequest playsRole respondedCompetenceCourseMarkSheetChangeRequests {
		multiplicity *;
	}
	
}

/* Evaluation Configuration */
class evaluation.CustomEvaluationConfiguration extends .org.fenixedu.academic.domain.EvaluationConfiguration {

}

class evaluation.EnrolmentEvaluationExtendedInformation {
	String remarks;
}

relation BennuEnrolmentEvaluationExtendedInformation {
	evaluation.EnrolmentEvaluationExtendedInformation playsRole enrolmentEvaluationExtendedInformations {
		multiplicity *;
	}
	
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation EnrolmentEvaluationEnrolmentEvaluationExtendedInformation {
    .org.fenixedu.academic.domain.EnrolmentEvaluation playsRole enrolmentEvaluation {
    	multiplicity 1..1;
    }
    
    evaluation.EnrolmentEvaluationExtendedInformation playsRole extendedInformation;
}

// ==================== END: Evaluations ====================

// ==================== BEGIN: Student Mobility ====================

class student.mobility.MobilityProgramType {
	String code;
	LocalizedString name;
	boolean active;
}
	
	relation MobilityProgramTypeBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.mobility.MobilityProgramType playsRole mobilityProgramTypes {
			multiplicity *;
		}
	}

class student.mobility.MobilityActivityType {
	String code;
	LocalizedString name;
	boolean active;
}

	relation MobilityActivityTypeBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.mobility.MobilityActivityType playsRole mobilityActivityTypes {
			multiplicity *;
		}
	}


class student.mobility.MobilityScientificArea {
	String code;
	LocalizedString name;
}

	relation MobilityScientificAreaBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.mobility.MobilityScientificArea playsRole mobilityScientificAreas {
			multiplicity *;
		}
	}

class student.mobility.MobilityProgrammeLevel {
	String code;
	LocalizedString name;
	boolean otherLevel;
}

	relation MobilityProgrammeLevelBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.mobility.MobilityProgrammeLevel playsRole mobilityProgrammeLevels {
			multiplicity *;
		}
	}

class student.mobility.MobilityRegistrationInformation {
	//The student can be either incoming, external student in mobility program
	// Or can be an internal student in mobility program
	boolean incoming;
	SchoolPeriodDuration programDuration;
	String otherOriginMobilityProgrammeLevel;
	String otherIncomingMobilityProgrammeLevel;
	boolean degreeBased;
	LocalDate beginDate;
	LocalDate endDate;
	String remarks;
	boolean national;
	boolean mainInformation;
}

	relation MobilityRegistrationInformationBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	}

	relation MobilityRegistrationInformationMobilityProgramType {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		student.mobility.MobilityProgramType playsRole mobilityProgramType;
	}
	
	relation MobilityRegistrationInformationMobilityActivityType {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		student.mobility.MobilityActivityType playsRole mobilityActivityType;
	}
	
	relation MobilityRegistrationInformationRegistration {
	
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.student.Registration playsRole registration {
			multiplicity 1..1;
		}
	}
	
	relation MobilityRegistrationInformationBeginExecutionInterval {
		
		student.mobility.MobilityRegistrationInformation playsRole {
			multiplicity *;
		}
		
		.org.fenixedu.academic.domain.ExecutionInterval playsRole begin;
	}
	
	relation MobilityRegistrationInformationEndExecutionInterval {
		
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.ExecutionInterval playsRole end;
	}
	
	relation MobilityRegistrationInformationForeignInstitutionUnit {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.organizationalStructure.Unit playsRole foreignInstitutionUnit {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationMobilityScientificArea {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		student.mobility.MobilityScientificArea playsRole mobilityScientificArea {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationMobilityProgrammeLevel {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		student.mobility.MobilityProgrammeLevel playsRole incomingMobilityProgrammeLevel {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationOriginMobilityProgrammeLevel {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformationsForOrigin {
			multiplicity *;
		}
	
		student.mobility.MobilityProgrammeLevel playsRole originMobilityProgrammeLevel {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationDegree {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.Degree playsRole degree {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationDegreeCurricularPlan {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.DegreeCurricularPlan playsRole degreeCurricularPlan {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationBranch {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformations {
			multiplicity *;
		}
	
		.org.fenixedu.academic.domain.degreeStructure.CourseGroup playsRole branchCourseGroup {
			multiplicity 0..1;
		}
	}
	
	relation MobilityRegistrationInformationCountryUnit {
		student.mobility.MobilityRegistrationInformation playsRole mobilityRegistrationInformationsCountries {
			multiplicity *;
		}
	
	
		.org.fenixedu.academic.domain.organizationalStructure.Unit playsRole countryUnit {
			multiplicity 0..1;
		}
	}
	
// ==================== END: Student Mobility ====================


class student.RegistrationDataByExecutionInterval  {
	Integer schoolClassEnrolmentPriority;
}
	relation RegistrationDataByExecutionIntervalExecutionInterval {
	    student.RegistrationDataByExecutionInterval playsRole registrationDataByExecutionIntervals { multiplicity *; }
	    .org.fenixedu.academic.domain.ExecutionInterval playsRole executionInterval;
	}
	relation RegistrationDataByExecutionIntervalRegistration {
	    student.RegistrationDataByExecutionInterval playsRole registrationDataByExecutionIntervals { multiplicity *; }
	    .org.fenixedu.academic.domain.student.Registration playsRole registration;
	}
	relation RegistrationDataByExecutionIntervalRootDomainObject {
	    student.RegistrationDataByExecutionInterval playsRole registrationDataByExecutionIntervals { multiplicity *; }
	    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
	}

class enrolment.schoolClass.SchoolClassEnrolmentPreference {
	Integer preferenceOrder;
	DateTime lastModificationDate;
}
	relation SchoolClassEnrolmentPreferenceRegistrationDataByExecutionInterval {
	    enrolment.schoolClass.SchoolClassEnrolmentPreference playsRole schoolClassEnrolmentPreferences { multiplicity *; }
	    student.RegistrationDataByExecutionInterval playsRole registrationDataByExecutionInterval;
	}
	relation SchoolClassEnrolmentPreferenceSchoolClass {
	    enrolment.schoolClass.SchoolClassEnrolmentPreference playsRole schoolClassEnrolmentPreferences { multiplicity *; }
	    .org.fenixedu.academic.domain.SchoolClass playsRole schoolClass;
	}	
	relation SchoolClassEnrolmentPreferenceRootDomainObject {
		enrolment.schoolClass.SchoolClassEnrolmentPreference playsRole schoolClassEnrolmentPreferences { multiplicity *; }
	    .org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject;
	}
		
class researchPublication.ResearchPublicationType {
	String code;
	LocalizedString name;
}
    relation ResearchPublicationTypeRootDomainObject {
        researchPublication.ResearchPublicationType playsRole researchPublicationTypes { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
class researchPublication.ResearchPublication {
    String title;
    String authors;
    String publicationData;
    Integer year;
    Integer relevanceOrder;
}
    relation ResearchPublicationPerson {
        researchPublication.ResearchPublication playsRole researchPublications { multiplicity *; }
        .org.fenixedu.academic.domain.Person playsRole person { multiplicity 1..1; }
    }
    relation ResearchPublicationResearchPublicationType {
        researchPublication.ResearchPublication playsRole researchPublications { multiplicity *; }
        researchPublication.ResearchPublicationType playsRole type { multiplicity 1..1; }
    }    
    relation ResearchPublicationRootDomainObject {
        researchPublication.ResearchPublication playsRole researchPublications { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }

class person.JobType {
	String code;
	LocalizedString name;
}    
    relation JobTypeRoot {
        person.JobType playsRole jobTypes { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation JobTypeJob {
        .org.fenixedu.academic.domain.Job playsRole jobs { multiplicity *; }
        person.JobType playsRole type { multiplicity 1..1; }
    }    


relation QualificationInstitutionUnit {
    .org.fenixedu.academic.domain.Qualification playsRole qualificationsForInstitution { multiplicity *; }
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole institutionUnit { multiplicity 0..1; }
}        
relation QualificationDegreeUnit {
    .org.fenixedu.academic.domain.Qualification playsRole qualificationsForDegree { multiplicity *; }
    .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole degreeUnit { multiplicity 0..1; }
}

class person.qualifications.QualificationLevel {
	String code;
	LocalizedString name;
}
    relation QualificationLevelRoot {
        person.qualifications.QualificationLevel playsRole qualificationLevels { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation QualificationLevelQualification {
        person.qualifications.QualificationLevel playsRole level { multiplicity 0..1; }
        .org.fenixedu.academic.domain.Qualification playsRole qualifications { multiplicity *; }
    }    

class person.qualifications.QualificationLevelType {
	String code;
	LocalizedString name;
}
    relation QualificationLevelTypeRoot {
        person.qualifications.QualificationLevelType playsRole qualificationLevelTypes { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation QualificationLevelTypeQualificationLevel {
        person.qualifications.QualificationLevelType playsRole types { multiplicity *; }
        person.qualifications.QualificationLevel playsRole levels { multiplicity *; }
    }    
    relation QualificationLevelTypeQualification {
		person.qualifications.QualificationLevelType playsRole qualificationTypes { multiplicity *; }        
        .org.fenixedu.academic.domain.Qualification playsRole qualifications { multiplicity *; }
    }        

class person.qualifications.QualificationLevelTypeFamily {
	String code;
	LocalizedString name;
}
    relation QualificationLevelTypeFamilyRoot {
        person.qualifications.QualificationLevelTypeFamily playsRole qualificationLevelTypeFamilies { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation QualificationLevelTypeFamilyQualificationLevelType {
	    person.qualifications.QualificationLevelTypeFamily playsRole family { multiplicity 1..1; }
        person.qualifications.QualificationLevelType playsRole types { multiplicity *; }
    }    
    
class academicStructure.AcademicArea {
	String code;
	LocalizedString name;
}
    relation AcademicAreaRoot {
        academicStructure.AcademicArea playsRole academicAreas { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation AcademicAreaQualification {
		academicStructure.AcademicArea playsRole academicAreas { multiplicity *; }        
        .org.fenixedu.academic.domain.Qualification playsRole qualifications { multiplicity *; }
    }        
    relation AcademicAreaUnit {
		academicStructure.AcademicArea playsRole academicAreas { multiplicity *; }        
        .org.fenixedu.academic.domain.organizationalStructure.Unit playsRole units { multiplicity *; }
    }                            
    
class academicStructure.AcademicAreaType {
	String code;
	LocalizedString name;
}
    relation AcademicAreaTypeRoot {
        academicStructure.AcademicAreaType playsRole academicAreaTypes { multiplicity *; }
        .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
    }
    relation AcademicAreaTypeAcademicArea {
        academicStructure.AcademicArea playsRole areas { multiplicity *; }
        academicStructure.AcademicAreaType playsRole type { multiplicity 1..1; }
    }  
    

// ==================== BEGIN: DynamicField ====================

class dml.DynamicFieldDescriptor {
	String domainObjectClassName (REQUIRED);
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
	String fieldValueClassName (REQUIRED);
	boolean required;
	Integer minLength;
	Integer maxLength;
	BigDecimal minNumber;
	BigDecimal maxNumber;
	boolean largeSize;
	boolean richText;
	int order;
} 

	relation DynamicFieldDescriptorRoot {
		.org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
		dml.DynamicFieldDescriptor playsRole dynamicFieldDescriptor { multiplicity *; }
	}

class dml.DynamicField {
	String value;
} 

    relation DynamicFieldsDescriptors {
        dml.DynamicField playsRole fields { multiplicity *; }
        dml.DynamicFieldDescriptor playsRole descriptor { multiplicity 1..1; }
    }    
	
	relation DynamicFieldRoot {
		dml.DynamicField playsRole dynamicField { multiplicity *; }
		.org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
	}

	relation DynamicFieldsForCompetenceCourseInformation {
		dml.DynamicField playsRole dynamicField { multiplicity *; }
		.org.fenixedu.academic.domain.degreeStructure.CompetenceCourseInformation playsRole competenceCourseInformation { multiplicity 0..1; }
	}

	relation DynamicFieldsForDegreeInfo {
		dml.DynamicField playsRole dynamicField { multiplicity *; }
		.org.fenixedu.academic.domain.DegreeInfo playsRole degreeInfo { multiplicity 0..1; }
	}
	
	relation DynamicFieldsForParty {
		dml.DynamicField playsRole dynamicField { multiplicity *; }
		.org.fenixedu.academic.domain.organizationalStructure.Party playsRole party { multiplicity 0..1; }
	}

// ==================== END: DynamicField ====================


valueType org.fenixedu.academic.domain.student.gradingTable.GradingTableData as GradingTableData {
    externalizeWith {
        String toJson();
    }

    internalizeWith fromJson();
}

// ==================== BEGIN: CurricularPeriodConfiguration ====================

class curricularRules.curricularPeriod.CurricularPeriodConfiguration {
}

relation CurricularPeriodConfigurationBennu {

	.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
		multiplicity 1..1;
	}
	
	curricularRules.curricularPeriod.CurricularPeriodConfiguration playsRole curricularPeriodConfigurations {
		multiplicity *;
	}
}

relation CurricularPeriodConfigurations {
	.org.fenixedu.academic.domain.curricularPeriod.CurricularPeriod playsRole curricularPeriod {
		multiplicity 1..1;
	}
	curricularRules.curricularPeriod.CurricularPeriodConfiguration playsRole configuration {
		multiplicity 0..1;
	}
}

class curricularRules.curricularPeriod.CurricularPeriodRule {
	BigDecimal value;
	boolean hideMessagePrefix;
	Integer semester;
	Integer yearMin;
	Integer yearMax;
	Boolean applyToOptionals;
}

	class curricularRules.curricularPeriod.RuleEnrolment extends curricularRules.curricularPeriod.CurricularPeriodRule {
		boolean includeEnrolments;
		Boolean applyToFlunkedStudents;
		Boolean applyToPartialRegime;
	}
	
		class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod extends curricularRules.curricularPeriod.RuleEnrolment {
		}
		
			class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForHighestCurricularYear extends curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod {
			}
			
			class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForFlunkedStudent extends curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod {
			}
		
			class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodByRegistrationData extends curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod {
			}
			
			class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForPartialRegime extends curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod {
			}
			
			class curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForStatutes extends curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod {
			}
		
		class curricularRules.curricularPeriod.enrolment.CreditsInCurricularPeriod extends curricularRules.curricularPeriod.RuleEnrolment {
		}
		
		class curricularRules.curricularPeriod.enrolment.CreditsNotEnroled extends curricularRules.curricularPeriod.RuleEnrolment {
		}
		
		class curricularRules.curricularPeriod.enrolment.CreditsEnroledAsFirstTime extends curricularRules.curricularPeriod.RuleEnrolment {
		}
		
		class curricularRules.curricularPeriod.enrolment.MinCreditsInEnrolmentPeriod extends curricularRules.curricularPeriod.RuleEnrolment {
		}
		
		
	class curricularRules.curricularPeriod.RuleTransition extends curricularRules.curricularPeriod.CurricularPeriodRule {
		boolean allowToCollectAllCurricularPlans;
		String codesCSV;
	}

		class curricularRules.curricularPeriod.transition.RuleTransitionOr extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.FlunkedCredits extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.ApprovedCredits extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.ApprovedCourses extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.FlunkedCurricularCourses extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.StudentStatuteExecutiveRule extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.EnrolmentYears extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.EnrolmentsInCurricularYear extends curricularRules.curricularPeriod.RuleTransition {
		}
		
		class curricularRules.curricularPeriod.transition.MinimumPartialAverage extends curricularRules.curricularPeriod.RuleTransition {
		}
		
relation CurricularPeriodConfigurationRuleEnrolment {
	curricularRules.curricularPeriod.CurricularPeriodConfiguration playsRole configurationEnrolment {
		multiplicity 0..1;
	}
	curricularRules.curricularPeriod.RuleEnrolment playsRole ruleEnrolment {
		multiplicity *;
	}
}

relation RuleEnrolmentStatuteType {
	curricularRules.curricularPeriod.RuleEnrolment playsRole ruleEnrolments { multiplicity *; }
	.org.fenixedu.academic.domain.student.StatuteType playsRole statuteTypes { multiplicity *; }
}

relation CurricularPeriodConfigurationRuleTransition {
	curricularRules.curricularPeriod.CurricularPeriodConfiguration playsRole configurationTransition {
		multiplicity 0..1;
	}
	curricularRules.curricularPeriod.RuleTransition playsRole ruleTransition {
		multiplicity *;
	}
}

relation RuleTransitionChildren {
	curricularRules.curricularPeriod.RuleTransition playsRole parentRuleTransition {
		multiplicity 0..1;
	}
	curricularRules.curricularPeriod.RuleTransition playsRole children {
		multiplicity *;
	}
}

relation StatuteTypeRuleTransition {
	.org.fenixedu.academic.domain.student.StatuteType playsRole statuteTypeForRuleTransition {
		multiplicity 0..1;
	}
	curricularRules.curricularPeriod.RuleTransition playsRole ruleTransitions {
		multiplicity *;
	}
}



// ==================== END: CurricularPeriodConfiguration ====================




// ==================== BEGIN: CurricularRule ====================

class curricularRules.ConditionedRoute extends .org.fenixedu.academic.domain.curricularRules.Rule {
}

class curricularRules.StudentStatuteCurricularRule extends .org.fenixedu.academic.domain.curricularRules.Rule {
}

	relation StudentStatuteCurricularRuleStatuteType {
		curricularRules.StudentStatuteCurricularRule playsRole studentStatuteCurricularRules {
			multiplicity *;
		}
		
		.org.fenixedu.academic.domain.student.StatuteType playsRole statuteType {
			multiplicity 1..1;
		}
	}
	
	
class curricularRules.StudentSchoolClassCurricularRule extends .org.fenixedu.academic.domain.curricularRules.Rule {
	String schoolClassNames;
	Boolean schoolClassMustContainCourse;
	Boolean courseMustHaveFreeShifts;
	Boolean enrolInShiftIfUnique;
	Boolean allAvailableShiftsMustBeEnrolled;
}

class curricularRules.CreditsLimitWithPreviousApprovals extends .org.fenixedu.academic.domain.curricularRules.Rule {
}

	relation CreditsLimitWithPreviousApprovalsCurricularRule {
		curricularRules.CreditsLimitWithPreviousApprovals playsRole creditsLimitWithPreviousApprovals {
			multiplicity *;
		}
		
		.org.fenixedu.academic.domain.degreeStructure.CourseGroup playsRole previousGroups {
			multiplicity 1..*;
		}
	}

class curricularRules.AnyCurricularCourseRestrictions extends .org.fenixedu.academic.domain.curricularRules.Rule {
}

    relation AnyCurricularCourseRestrictionsCourseGroup {
        curricularRules.AnyCurricularCourseRestrictions playsRole anyCurricularCourseRestrictions {
            multiplicity *;
        }
        .org.fenixedu.academic.domain.degreeStructure.CourseGroup playsRole courseGroups {
            multiplicity *;
        }
    }
    
class curricularRules.BlockEnrolmentByPreviousEnrolmentConditions extends .org.fenixedu.academic.domain.curricularRules.Rule {
	EnrollmentState previousEnrolmentState;
}

class curricularRules.BlockEnrolmentInAdvancedCurricularCourses extends .org.fenixedu.academic.domain.curricularRules.Rule {
	
}

class curricularRules.UnavailableForEnrolmentRule extends .org.fenixedu.academic.domain.curricularRules.Rule {
	
}

class curricularRules.RecommendedRoute extends .org.fenixedu.academic.domain.curricularRules.Rule {
}

	
// ==================== END: CurricularRule ====================

// ==================== BEGIN: CurricularRule Executor Logics ====================

class curricularRules.AnyCurricularCourseExceptionsConfiguration {
}
    
    relation AnyCurricularCourseExceptionsConfigurationBennu {

		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
		
		curricularRules.AnyCurricularCourseExceptionsConfiguration playsRole anyCurricularCourseExceptionsConfiguration {
    		multiplicity 0..1;
    	}
	}
    
    relation AnyCurricularCourseExceptionsCompetenceCourse {
    	curricularRules.AnyCurricularCourseExceptionsConfiguration playsRole anyCurricularCourseExceptionsConfiguration {
    		multiplicity *;
    	}
    	.org.fenixedu.academic.domain.CompetenceCourse playsRole competenceCourses {
    		multiplicity *;
    	}
    }

// ==================== END: CurricularRule Executor Logics ====================


/* Prescriptions */
class curricularRules.prescription.PrescriptionConfig {
	String name;
	BigDecimal partialRegimeBonus;
	boolean reingressionRestartsYearCount;
}


relation BennuPrescriptionConfig {

	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    
	curricularRules.prescription.PrescriptionConfig playsRole prescriptionConfigs {
		multiplicity *;
	}
	
}

relation PrescriptionConfigDegreeCurricularPlan {

	curricularRules.prescription.PrescriptionConfig playsRole prescriptionConfigs {
		multiplicity *;
	}
	
	.org.fenixedu.academic.domain.DegreeCurricularPlan playsRole degreeCurricularPlans {
        multiplicity *;
    }			
	
}

relation PrescriptionConfigBeginExecutionYear {
	.org.fenixedu.academic.domain.ExecutionYear playsRole beginExecutionYear;
	curricularRules.prescription.PrescriptionConfig playsRole prescriptionConfigsAsBeginExecutionYear {
		multiplicity *;
	}
}

class curricularRules.prescription.PrescriptionEntry {
	BigDecimal enrolmentYears;
	BigDecimal minEctsApproved;
}

relation PrescriptionConfigPrescriptionEntry {
	
	curricularRules.prescription.PrescriptionConfig playsRole prescriptionConfig {
        multiplicity 1..1;
    }
	
	curricularRules.prescription.PrescriptionEntry playsRole prescriptionEntries {
        multiplicity *;
    }
}

class curricularRules.prescription.PrescriptionBonificationStatute {
	BigDecimal bonus;
}

relation BennuPrescriptionBonificationStatute {
	
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    
	curricularRules.prescription.PrescriptionBonificationStatute playsRole prescriptionBonificationStatutes {
		multiplicity *;
	}
	
}

relation PrescriptionConfigPrescriptionBonificationStatute {

	curricularRules.prescription.PrescriptionConfig playsRole configuration {
		multiplicity 1..1;
	}
	
	curricularRules.prescription.PrescriptionBonificationStatute playsRole bonificationStatutes {
		multiplicity *;
	}
}

relation PrescriptionBonificationStatuteStatuteType {

	curricularRules.prescription.PrescriptionBonificationStatute playsRole prescriptionBonificationStatutes {
		multiplicity *;
	}
	
	.org.fenixedu.academic.domain.student.StatuteType playsRole statuteType {
		multiplicity 1..1;
	}
}


//======================= = AcademicEnrolmentPeriod = =========================

class enrolment.period.AcademicEnrolmentPeriod {
	LocalizedString name;
    DateTime startDate;
    DateTime endDate;
    Boolean firstTimeRegistration;
    Boolean restrictToSelectedStatutes;
    Boolean restrictToSelectedIngressionTypes;
    Integer minStudentNumber;
    Integer maxStudentNumber;
    Integer curricularYear;
    AcademicEnrolmentPeriodType enrolmentPeriodType;
    AutomaticEnrolment automaticEnrolment;
    Boolean allowEnrolWithDebts;
    Boolean schoolClassSelectionMandatory;
}

relation AcademicEnrolmentPeriodBennu {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }

    protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation AcademicEnrolmentPeriodExecutionInterval {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }

    public .org.fenixedu.academic.domain.ExecutionInterval playsRole executionSemester {
        multiplicity 1..1;
    }    
}

relation AcademicEnrolmentPeriodDegreeCurricularPlan {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }

    public .org.fenixedu.academic.domain.DegreeCurricularPlan playsRole degreeCurricularPlans {
        multiplicity *;
    }    
}

relation AcademicEnrolmentPeriodStatuteType {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }

    public .org.fenixedu.academic.domain.student.StatuteType playsRole statuteTypes {
        multiplicity *;
    }    
}

relation AcademicEnrolmentPeriodIngressionType {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }
    public .org.fenixedu.academic.domain.candidacy.IngressionType playsRole ingressionTypes {
        multiplicity *;
    }
}

relation AcademicEnrolmentPeriodEnrolmentType {
    public enrolment.period.AcademicEnrolmentPeriod playsRole academicEnrolmentPeriods {
        multiplicity *;
    }
    public .org.fenixedu.academic.domain.EnrolmentType playsRole enrolmentTypes {
        multiplicity *;
    }
}


//======================= = END AcademicEnrolmentPeriod = =========================



// ====================== = ECTS Grading Table = ========================

class student.gradingTable.GradingTable {
	GradingTableData data;
	boolean copied;
	String studentSampleData;
}

	class student.gradingTable.InstitutionGradingTable extends student.gradingTable.GradingTable {
	}
	class student.gradingTable.DegreeGradingTable extends student.gradingTable.GradingTable {
	}
	class student.gradingTable.CourseGradingTable extends student.gradingTable.GradingTable {
	}
	class student.gradingTable.GeneralPurposeGradingTable extends student.gradingTable.GradingTable {
	}
	class student.gradingTable.DefaultGradingTable extends student.gradingTable.GradingTable {
	}
	
class student.gradingTable.GradingTableSettings {
	Integer minSampleSize;
	Integer minPastYears;
	Integer maxPastYears;
}


relation GradingTableBennu {
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    public student.gradingTable.GradingTable playsRole gradingTables {
    	multiplicity *;
    }
}

relation GradingTableExecutionYear {
	.org.fenixedu.academic.domain.ExecutionYear playsRole executionYear {
        multiplicity 0..1;
    }
    public student.gradingTable.GradingTable playsRole gradingTables {
    	multiplicity *;
    }
}

relation DegreeGradingTableDegree {
	public .org.fenixedu.academic.domain.Degree playsRole degree{
        multiplicity 1..1;
    }
	public student.gradingTable.DegreeGradingTable playsRole degreeGradingTables {
    	multiplicity *;
    }
}

relation DegreeGradingTableProgramConclusion {
	public .org.fenixedu.academic.domain.degreeStructure.ProgramConclusion playsRole programConclusion {
        multiplicity 1..1;
    }
    public student.gradingTable.DegreeGradingTable playsRole degreeGradingTables {
    	multiplicity *;
    }
}

relation DegreeGradingTableRegistration {
	public .org.fenixedu.academic.domain.student.Registration playsRole registration {
        multiplicity 0..1;
    }
    public student.gradingTable.DegreeGradingTable playsRole degreeGradingTables {
    	multiplicity *;
    }
}

relation CourseGradingTableCompetenceCourse {
	public .org.fenixedu.academic.domain.CompetenceCourse playsRole competenceCourse {
		multiplicity 1..1;
	}
	public student.gradingTable.CourseGradingTable playsRole courseGradingTables {
    	multiplicity *;
    }
}

relation CourseGradingTableCurriculumLine {
	public .org.fenixedu.academic.domain.studentCurriculum.CurriculumLine playsRole curriculumLine {
        multiplicity 0..1;
    }
	public student.gradingTable.CourseGradingTable playsRole courseGradingTable {
    	multiplicity 0..1;
    }
}

relation GradingTableSettingsBennu {
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
    public student.gradingTable.GradingTableSettings playsRole gradingTableSettings {
    	multiplicity 0..1;
    }
}

relation GradingTableSettingsDegreeType {
	public .org.fenixedu.academic.domain.degree.DegreeType playsRole applicableDegreeTypes {
        multiplicity *;
    }
    public student.gradingTable.GradingTableSettings playsRole gradingTableSettings {
    	multiplicity 0..1;
    }
}


// ====================== = End Of ECTS Grading Table = ========================


// ======================= BEGIN: RegistrationExtendedInformation =========================

class student.RegistrationExtendedInformation {
	BigDecimal ingressionGradeA;
	BigDecimal ingressionGradeB;
	BigDecimal ingressionGradeC;
	BigDecimal ingressionGradeD;
	
	BigDecimal internshipGrade;
	LocalDate internshipConclusionDate;
	
	boolean curriculumAccumulated;
	boolean manuallyAssignedNumber;
}

relation BennuRegistrationExtendedInformation {
	student.RegistrationExtendedInformation playsRole registrationExtendedInformations {
		multiplicity *;
	}
	
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation RegistrationRegistrationExtendedInformation {
    .org.fenixedu.academic.domain.student.Registration playsRole registration {
    	multiplicity 1..1;
    }
    
    student.RegistrationExtendedInformation playsRole extendedInformation;
}

// ======================= END: RegistrationExtendedInformation =========================


// ======================= BEGIN: RegistrationDataByExecutionYearExtendedInformation =========================

class student.RegistrationDataByExecutionYearExtendedInformation {
	Integer curricularYear;
}

relation BennuRegistrationDataByExecutionYearExtendedInformation {
	student.RegistrationDataByExecutionYearExtendedInformation playsRole registrationDataByExecutionYearExtendedInformations {
		multiplicity *;
	}
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation RegistrationDataByExecutionYearWithExtendedInformation {
    .org.fenixedu.academic.domain.student.RegistrationDataByExecutionYear playsRole dataByExecutionYear {
    	multiplicity 1..1;
    }
    
    student.RegistrationDataByExecutionYearExtendedInformation playsRole extendedInformation;
}

// ======================= END: RegistrationDataByExecutionYearExtendedInformation =========================

class student.ResearchArea {
	String code;
	LocalizedString name;
}

	relation ResearchAreaBennu {
		.org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
			multiplicity 1..1;
		}
	
		student.ResearchArea playsRole researchAreas {
			multiplicity *;
		}
	}
	
	relation ResearchAreaStudentCurricularPlan {
		.org.fenixedu.academic.domain.student.Registration playsRole registration {
			multiplicity *;
		}
	
		student.ResearchArea playsRole researchArea {
			multiplicity 0..1;
		}
	}
	
// ==================== BEGIN: Credits Reason Type ====================

class student.curriculum.CreditsReasonType {
	LocalizedString reason (REQUIRED);
	boolean active;
	boolean averageEntry;
	boolean infoHidden;
	LocalizedString infoText (REQUIRED);
	boolean infoExplained;
	boolean infoExplainedWithCountry;
	boolean infoExplainedWithInstitution;
	boolean infoExplainedWithEcts;
}

relation CreditsReasonTypeDomainObject {
	student.curriculum.CreditsReasonType playsRole creditsReasonTypes {
		multiplicity *;
	}
	
	.org.fenixedu.bennu.core.domain.Bennu playsRole rootDomainObject {
		multiplicity 1..1;
	}
}

relation CreditsReasonTypeCredits {
	student.curriculum.CreditsReasonType playsRole reason;
	
	.org.fenixedu.academic.domain.studentCurriculum.Credits playsRole credits {
		multiplicity *;
	}
}

// ==================== END: Credits Reason Type ====================
	
// ====================== = CurriculumLineExtendedInformation = ========================

class student.curriculum.CurriculumLineExtendedInformation {
	String remarks;
	Integer curricularYear;
	Boolean excludedFromAverage;
	boolean excludedFromCurriculum;
	BigDecimal ectsCredits;
	BigDecimal weight;
}

relation BennuCurriculumLineExtendedInformation {
	student.curriculum.CurriculumLineExtendedInformation playsRole curriculumLineExtendedInformations {
		multiplicity *;
	}
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation CurriculumLineCurriculumLineExtendedInformation {
    .org.fenixedu.academic.domain.studentCurriculum.CurriculumLine playsRole curriculumLine {
    	multiplicity 1..1;
    }
    
    student.curriculum.CurriculumLineExtendedInformation playsRole extendedInformation;
}
	
// ====================== = ExtendeDegreeInfo = ========================

class degree.ExtendedDegreeInfo {
	LocalizedString scientificAreas;
	LocalizedString studyProgrammeDuration;
	LocalizedString studyRegime;
	LocalizedString studyProgrammeRequirements;
	LocalizedString higherEducationAccess;
	LocalizedString professionalStatus;
	LocalizedString supplementExtraInformation;
	LocalizedString supplementOtherSources;
}

relation BennuExtendedDegreeInfo {
	degree.ExtendedDegreeInfo playsRole extendedDegreeInfo {
		multiplicity *;
	}
	protected .org.fenixedu.bennu.core.domain.Bennu playsRole bennu {
        multiplicity 1..1;
    }
}

relation DegreeInfoExtendedDegreeInfo {
    .org.fenixedu.academic.domain.DegreeInfo playsRole degreeInfo;
    degree.ExtendedDegreeInfo playsRole extendedDegreeInfo;
}
	
// ======================= Registration Observations =========================
class student.RegistrationObservations{
	String value;
}

relation RegistrationObservationRegistration{
	protected .org.fenixedu.academic.domain.student.Registration playsRole registration {
        multiplicity 1..1;
    }
    
    student.RegistrationObservations playsRole registrationObservations{
    	multiplicity *;
    }
}
// ======================= Registration Observations end =========================


/* Precedent Degrees */

relation DegreePrecedentDegree {
	.org.fenixedu.academic.domain.Degree playsRole precedentDegrees {
		multiplicity *;
	}
	
	.org.fenixedu.academic.domain.Degree playsRole subsequentDegrees {
		multiplicity *;
	}
}

// ======================= = Enrolment in Scool Classes begin = =========================



relation SchoolClassPrecedence {
    .org.fenixedu.academic.domain.SchoolClass playsRole nextSchoolClass;
    .org.fenixedu.academic.domain.SchoolClass playsRole previousSchoolClasses {
        multiplicity *;
    }
}

