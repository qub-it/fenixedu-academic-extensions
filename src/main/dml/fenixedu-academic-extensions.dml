package org.fenixedu.academicextensions.domain;

external class .org.fenixedu.academic.domain.Person;


// ==================== BEGIN: DataShareAuthorization ====================

class person.dataShare.DataShareAuthorizationType {
	String code (REQUIRED);
	LocalizedString name (REQUIRED);
	String groupExpression (REQUIRED);
	boolean active;
	LocalizedString question (REQUIRED);
}
	relation DataShareAuthorizationTypeRoot {
		person.dataShare.DataShareAuthorizationType playsRole dataShareAuthorizationType { multiplicity *; }
	    .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
	}
	
	relation DataShareAuthorizationCompostion {
		person.dataShare.DataShareAuthorizationType playsRole dataShareAuthorizationTypeParent { multiplicity 0..1; }
		person.dataShare.DataShareAuthorizationType playsRole dataShareAuthorizationTypeChildren { multiplicity *; }
	}
    	    	
class person.dataShare.DataShareAuthorization {
	DateTime since (REQUIRED);
	Boolean allow; // Not primitive Boolean in case of in the future we need defaults for null value, according to DataShareAuthorizationType
}
	relation DataShareAuthorizationRoot {
		person.dataShare.DataShareAuthorization playsRole dataShareAuthorization { multiplicity *; }
	    .org.fenixedu.bennu.core.domain.Bennu playsRole root { multiplicity 1..1; }
	}
    	
	relation DataShareAuthorizationPerson {
	    person.dataShare.DataShareAuthorization playsRole dataShareAuthorization { multiplicity *; }
	    .org.fenixedu.academic.domain.Person playsRole person { multiplicity 1..1; }
	}

	relation DataShareAuthorizationPersonType {
	    person.dataShare.DataShareAuthorization playsRole authorization { multiplicity *; }
	    person.dataShare.DataShareAuthorizationType playsRole type { multiplicity 1..1; }
	}

// ==================== END: DataShareAuthorization ====================


