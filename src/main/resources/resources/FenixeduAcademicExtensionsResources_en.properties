error.temporaryFile.filename.required=Filename is required

error.CompetenceCourseMarkSheetSnapshot.stateChange.must.be.of.type.submited=Marksheet versions can only be associated to "Finalized" states
error.CompetenceCourseMarkSheetSnapshot.stateChange.required=State is required
error.CompetenceCourseMarkSheetSnapshot.competenceCourseName.required=Curricular Unit Name is required
error.CompetenceCourseMarkSheetSnapshot.executionSemester.required=Semester is required
error.CompetenceCourseMarkSheetSnapshot.evaluationSeason.required=Season is required
error.CompetenceCourseMarkSheetSnapshot.certifier.required=Signer Teacher is required
error.CompetenceCourseMarkSheetSnapshot.evaluationDate.required=Evaluation Data is required
error.CompetenceCourseMarkSheetSnapshot.entry.required=At least one evaluation is required
error.CompetenceCourseMarkSheetStateChange.competenceCourseMarkSheet.required=Marksheet is required
error.CompetenceCourseMarkSheetStateChange.state.required=State Type is required
error.CompetenceCourseMarkSheetStateChange.date.required=Data is required
error.CompetenceCourseMarkSheetStateChange.responsible.required=Responsible is required
error.CompetenceCourseMarkSheet.evaluationSeason.required=Season is required
error.CompetenceCourseMarkSheet.competenceCourse.required=Curricular Unit is required
error.CompetenceCourseMarkSheet.executionSemester.required=Semester is required
error.CompetenceCourseMarkSheet.certifier.required=Signer Teacher is required
error.CompetenceCourseMarkSheet.evaluationDate.required=Evaluation Date is required
error.CompetenceCourseMarkSheet.evaluationDate.cannotBeAfterToday=Evaluation Date cannot be after today
error.CompetenceCourseMarkSheet.executionCourse.required=Execution is required
error.CompetenceCourseMarkSheet.evaluationDateNotInWorkingDay=The evaluation date {0} corresponds to a Sunday or public holiday.
error.CompetenceCourseMarkSheet.evaluationDateNotInExamsPeriod.undefined=The exam period for the season "{0}" is undefined for "{1}"
error.CompetenceCourseMarkSheet.evaluationDateNotInExamsPeriod=The evaluation date {0} is not inside exam period: {1}
error.CompetenceCourseMarkSheet.notInGradeSubmissionPeriod.undefined=The marksheet submission period for the season "{0}" is undefined for "{1}"
error.CompetenceCourseMarkSheet.notInGradeSubmissionPeriod=Outside marksheet submission period: {0}
error.CompetenceCourseMarkSheet.notInGradeSubmissionPeriod.expired=Marksheet expired
error.CompetenceCourseMarkSheet.evaluations.examDate.must.be.equal.marksheet.evaluationDate=All evaluations on marksheet must have the same evaluation date
error.CompetenceCourseMarkSheet.markSheet.can.only.be.deleted.in.edition.state=Marksheets can only be deleted in "Edition" state
error.CompetenceCourseMarkSheet.duplicated=The season "{0}" requires a full marksheet and there is already a marksheet similar to the one you are trying to create. If there are students missing from that marksheet, please check if they are already available to fill. To do this, you may have to request to reopen the marksheet.
error.CompetenceCourseMarkSheet.must.be.submitted.to.confirm=Marksheets can only be confirmed in "Finalized" state
error.CompetenceCourseMarkSheet.enrolmentEvaluations.required.to.confirm.markSheet=At least one evaluation is required
error.CompetenceCourseMarkSheet.must.be.edition.to.confirm=Marksheets can only be finalized in "Edition" state
error.CompetenceCourseMarkSheet.already.in.edition=Marksheet is already in "Edition" state
error.CompetenceCourseMarkSheet.gradeScale.required=Grade Scale is required
error.CompetenceCourseMarkSheet.no.enrolments.found.for.grade.submission=There are no enrolments available for grade submission
error.CompetenceCourseMarkSheet.shifts.not.allowed=You cannot choose Shifts.
error.CompetenceCourseMarkSheet.shift.required=Please choose at least one Shift.
error.CompetenceCourseMarkSheet.shifts.required=Please choose exactly {0} Shift(s).
error.CompetenceCourseMarkSheet.marksheet.already.contains.evaluations.with.another.grade.scale=Marksheet already contains evaluations with another grade scale.
error.CompetenceCourseMarkSheetSnapshotEntry.snapshot.required=Marksheet version is required
error.CompetenceCourseMarkSheetSnapshotEntry.studentNumber.required=Student Number is required
error.CompetenceCourseMarkSheetSnapshotEntry.studentName.required=Student Name is required
error.CompetenceCourseMarkSheetSnapshotEntry.grade.required=Grade is required
error.CompetenceCourseMarkSheetSnapshotEntry.degreeName.required=Degree name is required

error.EvaluationSeasonRule.evaluationSeason.required=Season is required
error.EvaluationSeasonRule.duplicated=This Evaluation Season already has a Rule of the chosen type
error.EvaluationSeasonRule.grade.required=Please insert a valid Grade
error.EvaluationSeasonPeriod.evaluationSeason.inconsistent=Each period can only be associated to one season
error.EvaluationSeasonPeriod.occupationPeriod.duplicate=The period overlaps with another already defined for this season
error.EvaluationSeasonInformation.evaluationSeason.required=Season is required
error.EvaluationSeasonInformation.order.required=Order is required
error.EvaluationSeason.code.required=Code required
error.EvaluationSeason.acronym.required=Acronym required
error.EvaluationSeason.name.required=Name required
error.EvaluationSeason.type.not.unique=Please choose exactly one Evaluation Season type
error.EvaluationSeason.duplicated.name=Evaluation Season name already in use
error.EvaluationSeason.evaluationSeasonInformation.required=Season Additional Information is required
error.EvaluationSeason.not.empty.to.delete=Cannot delete seasons with grades or marksheets associated

error.GradeScaleValidator.degreeTypes.required=Please indicate at least one Degree Type

# GradingTableSettings
error.GradingTableSettings.minSampleSize.required=Minimum sample size is a required value
error.GradingTableSettings.minPastYears.required=Minimum past years is a required value
error.GradingTableSettings.maxPastYears.required=Maximum past years is a required value
error.GradingTableSettings.minSampleSize.invalid=Minimum sample size is 30
error.GradingTableSettings.maxPastYears.invalid=Maximum number of years must be greater or equal to the minimum number of years

info.CompetenceCourseMarkSheetChangeRequest.cascade.authorize = Closed automatically on acceptance of request {0} by {1} on {2}.
info.CompetenceCourseMarkSheetChangeRequest.cascade.close = Closed automatically by closing request {0} by {1} in {2}.

#CompetenceCourseMarkSheetChangeRequestStateEnum
CompetenceCourseMarkSheetChangeRequestStateEnum.PENDING=Pending
CompetenceCourseMarkSheetChangeRequestStateEnum.AUTHORIZED=Authorized
CompetenceCourseMarkSheetChangeRequestStateEnum.CLOSED=Closed

label.EvaluationSeason.special=Special
label.EvaluationSeason.normal=Normal
label.EvaluationSeason.improvement=Improvement
label.EvaluationSeason.specialAuthorization=Special Authorization
error.MarkBean.gradeValue.does.not.belong.to.scale=Invalid grade '{0}' in scale {1} (Student number: {2})
error.MarkBean.evaluation.already.edited=Grade in the meantime associated with another marksheet
error.MarkBean.markSheet.not.edition=This marksheet is not available for edition
info.MarkBean.gradeValue.suggestion=Suggested grade: {0}


error.OccupationPeriod.required.ExecutionDegree=At least one degree is required
error.OccupationPeriod.inconsistent.ExecutionYear=Each period can only have execution degrees for the same academic year
error.OccupationPeriod.required.Interval=There must be at least one period
error.OccupationPeriod.duplicate.Interval=Found another similar period: {0}
error.OccupationPeriod.inconsistent.Interval.start=Found another period which contains this start date: {0}
error.OccupationPeriod.inconsistent.Interval.end=Found another period which contains this end date: {0}
error.OccupationPeriod.interval.not.found=No period found for the specified dates

#CompetenceCourseMarkSheetStateEnum
CompetenceCourseMarkSheetStateEnum.EDITION=Edition
CompetenceCourseMarkSheetStateEnum.SUBMITTED=Finalized
CompetenceCourseMarkSheetStateEnum.CONFIRMED=Confirmed
CompetenceCourseMarkSheetStateEnum.CANCELLED=Cancelled

BlockingTreasuryEventInDebt = Blocking Treasury Event In Debt
EvaluationSeasonShiftType=Shift Types
EvaluationSeasonStatuteType=Blocking Statutes
GradeScaleValidator=Grade Scale Validator
PreviousSeasonMinimumGrade=Previous Season minimum grade
PreviousSeasonBlockingGrade=Previous Season blocking grade

#EvaluationSeasonPeriodType
GRADE_SUBMISSION=Marksheet Submission
EXAMS=Evaluations

label.Degree.degreeType=Degree Type

error.EnrolmentType.alreadyExistsTypeWithSameCode=Already exists an Enrolment Type with code '{0}'


#CurricularPeriodRule
label.CurricularYearResult.empty=Transited from previous year
label.CurricularYearResult.prefix.remove=Student of the
label.CurricularYearResult.prefix.add=Failed
label.CurricularPeriodRule.prefix=[Student of the {0}]
label.CurricularPeriodRule.suffix=Your current enrolment comprises {0} ECTS.
label.CreditsInEnrolmentPeriod.semester=You are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriod=You are only allowed to enrol in {0} ECTS.
label.CreditsInCurricularPeriod.semester=Exceeded the {0} ECTS allowed for enrollment in the semester {1} of year {2}.
label.CreditsInCurricularPeriod.year=Exceeded the {0} ECTS allowed for enrollment in the year {1}.
label.CreditsInCurricularPeriod=Exceeded {0} ECTS allowed for enrollment between years {1} and {2}.
label.CreditsInCurricularPeriod.simple=You are not allowed to enrol in curricular units of curricular years above yours.
label.CreditsNotEnroled=[Information] You are required to complete {0} ECTS in the curricular year {1}.
label.CreditsNotEnroled.applyToOptionals=[Information] Required {0} ECTS of optional curricular courses to complete the curricular year {1}.
label.CreditsNotEnroled.applyToOptionals.not=[Information] Required {0} ECTS of compulsory curricular courses to complete the curricular year {1}.
label.CreditsNotEnroled.suffix=You are enroled in {0} ECTS and have already completed {1} ECTS, totaling {2} ECTS for that curricular year.
label.FlunkedCredits.total=You may have {0} ECTS in arrears.
label.FlunkedCredits.year=You can only have {0} ECTS in arrears for the year {1}.
label.FlunkedCredits=You can only have {0} ECTS in arrears between years {1} and {2}.
label.FlunkedCredits.suffix= But only if you have the '{0}' status. 
label.FlunkedCurricularCourses=You may have {0} ECTS in arrears in the following Curricular Units (year {1}): {2}.
label.ApprovedCourses=Necessary {0} curricular courses approved in previous years.
label.ApprovedCourses.semester=Required {0} curricular courses approved in the semester {1} of previous years.
label.ApprovedCourses.suffix=Detected {0} approvals.
label.ApprovedCredits=Required {0} approved ECTS.
label.ApprovedCredits.applyToOptionals=Required {0} approved ECTS of optional curricular courses.
label.ApprovedCredits.applyToOptionals.not=Required {0} approved ECTS of compulsory curricular courses.
label.ApprovedCredits.year=Required {0} ECTS approved in year {1}.
label.ApprovedCredits.year.applyToOptionals=Required {0} ECTS of optional curricular courses approved in year {1}.
label.ApprovedCredits.year.applyToOptionals.not=Required {0} ECTS of compulsory curricular courses approved in year {1}.
label.ApprovedCredits.years=Required {0} ECTS approved between years {1} and {2}.
label.ApprovedCredits.years.applyToOptionals=Required {0} ECTS approved of optional curricular courses between years {1} and {2}.
label.ApprovedCredits.years.applyToOptionals.not=Required {0} ECTS approved of compulsory curricular courses between years {1} and {2}.
label.EnrolmentsInCurricularYear=At least {0} enrolment in the year {1} is required.
label.CreditsEnroledAsFirstTime=Only {0} ECTS are allowed in new enrolments.
label.CreditsEnroledAsFirstTime.semester=Only {0} ECTS of new enrolments are allowed in semester {1}.
label.ExecutiveStatuteType=Status "{0}" detected
label.ExecutiveStatuteType.suffix=in the academic year {0}
label.StudentStatuteExecutiveRule=Status "{0}" detected
label.StudentStatuteExecutiveRule.suffix=in the academic year {0}
label.CreditsInEnrolmentPeriodForHighestCurricularYear.semester=You are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriodForHighestCurricularYear=You are only allowed to enrol in {0} ECTS.
label.CreditsInEnrolmentPeriodForFlunkedStudent.semester=Repeat students are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriodForFlunkedStudent=Repeat students are only allowed to enrol in {0} ECTS.
label.CreditsInEnrolmentPeriodByRegistrationData.semester=New students are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriodByRegistrationData=New students are only allowed to enrol in {0} ECTS.
label.CreditsInEnrolmentPeriodForPartialRegime.semester=Partial regime students are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriodForPartialRegime=Partial regime students are only allowed to enrol in {0} ECTS.
label.CreditsInEnrolmentPeriodForStatutes.semester=You are only allowed to enrol in {0} ECTS for each semester.
label.CreditsInEnrolmentPeriodForStatutes=You are only allowed to enrol in {0} ECTS.
label.CreditsInEnrolmentPeriodForRegistrationProtocols=You are only allowed to enrol in {0} ECTS.

label.curricularYear.begin.executionYear=begin {0}: {1}
label.curricularYear.overriden=Assigned curricular year {0}. The calculated would be {1} (reason: "{2}").
label.curricularYear.overriden.observation.removed=Removed manually assigned curricular year.
label.curricularYear.overriden.observation.updated=Assigned curricular year {0} manually.
label.curricularYear.overriden.observation.suffix=Previous curricular year was {0} (reason: "{1}").
error.curricularYear.unable.to.determine.student.curricular.plan.for.execution.year=Unable to determine curricular plan for "{0}"


#CurricularRule 
label.ConditionedRoute = Conditioned Route

#label.StudentSchoolClassCurricularRule = Student Schedule
label.StudentSchoolClassCurricularRule.schoolClassNames = Student in School Classes: {0}
label.StudentSchoolClassCurricularRule.schoolClassMustContainCourse = Student School Class has Shift for Course
label.StudentSchoolClassCurricularRule.courseMustHaveFreeShifts = Course has free Shifts
label.StudentSchoolClassCurricularRule.enrolInShiftIfUnique = Automatic enrolment in Shifts if only option
label.StudentSchoolClassCurricularRule.allAvailableShiftsMustBeEnrolled = Mandatory enrolment in all available Shifts
message.StudentSchoolClassCurricularRule.allAvailableShiftsMustBeEnrolled.error = Attention: is mandatory enrolment in all available Shifts

label.StudentStatuteCurricularRule = Students with Statute
label.CreditsLimitWithPreviousApprovals = Credits Limit With Previous Approvals
label.AnyCurricularCourseRestrictions = Optional Curricular Course Restrictions
label.AnyCurricularCourseRestrictions.allowedCourseGroups = Curricular Unit descendent of one of the following groups {0}

#CurricularRule Executor
curricularRules.ruleExecutors.ConditionedRouteExecutor.route.choice.must.be.performed.by.academic.office = Route choice '{0}' is conditioned and must be performed by Academic Office
curricularRules.ruleExecutors.StudentStatuteCurricularRuleExecutor.statutes.is.required.to.enrol=The statute "{1}" is required to enrol in "{0}"
curricularRules.ruleExecutors.AnyCurricularCourseRestrictions.not.offered.label=Blocked
curricularRules.ruleExecutors.AnyCurricularCourseRestrictions.only.allowedCourseGroups=You cannot choose "{0}" for "{1}", you must choose a Curricular Unit descendent from one of the following groups: {2}

#CurricularRule Executor Logics
curricularRules.ruleExecutors.AnyCurricularCourseExceptions.not.offered.label=Not Available
curricularRules.ruleExecutors.AnyCurricularCourseExceptions.not.offered=You cannot choose "{0}" for "{1}", it is not available
curricularRules.ruleExecutors.AnyCurricularCourseExceptions.only.optional=You cannot choose "{0}" for "{1}", you must choose in an optional of the selected degree
curricularRules.ruleExecutors.AnyCurricularCourseExceptions.only.mandatory=You cannot choose "{0}" for "{1}", you must choose in an mandatory curricular unit of the selected degree

curricularRules.ruleExecutors.StudentSchoolClassCurricularRuleExecutor.error.schoolClassMustContainCourse=Student school class ({0}) doesn't contain shifts for curricular course {1} - {2}
curricularRules.ruleExecutors.StudentSchoolClassCurricularRuleExecutor.error.courseMustHaveFreeShiftsInSchoolClass=Curricular course {0} - {1} doesn't have free shifts in student school class
curricularRules.ruleExecutors.StudentSchoolClassCurricularRuleExecutor.error.courseMustHaveFreeShifts=Curricular course {0} - {1} doesn't have shifts with available vacancies
curricularRules.ruleExecutors.StudentSchoolClassCurricularRuleExecutor.error.registrationNotForSchoolClass=Enrollment to curricular course {0} - {1} isn't available to student school class  


error.AcademicEnrolmentPeriod.startDate.required=The start Date is required.
error.AcademicEnrolmentPeriod.endDate.required=The end Date is required.
error.AcademicEnrolmentPeriod.enrolmentPeriodType.required=The Period Type is required.
error.AcademicEnrolmentPeriod.executionSemester.required=The Semester is required.
error.AcademicEnrolmentPeriod.startDate.before.endDate=The start date must be before the end date.
error.AcademicEnrolmentPeriod.minNumber.must.be.lower.maxNumber=The minimum student number must be lower than the maximum student number.


# EnrolmentPeriodType
AcademicEnrolmentPeriodType.CURRICULAR_COURSE=Curricular Courses
AcademicEnrolmentPeriodType.SHIFT=Shifts
AcademicEnrolmentPeriodType.SCHOOL_CLASS=School Classes
AcademicEnrolmentPeriodType.INITIAL_SCHOOL_CLASS=School Classes (initial selection)
AcademicEnrolmentPeriodType.SCHOOL_CLASS_PREFERENCE=School Classes (preference selection)

# Automatic Enrolment
AutomaticEnrolment.YES_EDITABLE= Yes (editable)
AutomaticEnrolment.YES_UNEDITABLE= Yes (uneditable)
AutomaticEnrolment.NO= No


# Credits Reason
error.CreditsReasonType.cannot.delete.because.already.has.credits.associated = Cannot delete a reason already associated to Credits Transfers
error.CreditsReasonType.reason.must.be.unique = The reason already exists
error.CreditsReasonType.required.Reason = The reason is required
error.Credits.officialDate.must.be.after.source.enrolments.approval.date = Official date must be after sources approval date: {0}
info.CreditsReasonType.explained.Substitution=granted to
info.CreditsReasonType.explained.Equivalence=granted by
info.CreditsReasonType.explained.ects=[{0} ECTS]

label.approvalType.Enrolment=Enrolment
label.approvalType.Substitution=Substitution
label.approvalType.Equivalence=Equivalence


# RegistrationHistoryReportService
error.RegistrationHistoryReportService.insufficient.search.parameters=The parameters are not enough for search.


error.DynamicFieldDescriptor.code.required=Code is required
error.DynamicFieldDescriptor.domainObjectClass.required=Entity is required
error.DynamicFieldDescriptor.domainObjectClass.is.not.a.domain.object=Entity is not a domain object
error.DynamicFieldDescriptor.name.required=Name is required
error.DynamicFieldDescriptor.fieldValueClassName.required=Data type is required
error.DynamicFieldDescriptor.fieldValueClass.unsupported=Unsupported data type
error.DynamicFieldDescriptor.value.inconsistent=Configuration is not consistent with existing data
error.DynamicFieldDescriptor.min.and.max.length.must.be.defined.simultaneously=Min and max length must be defined simultaneously
error.DynamicFieldDescriptor.min.length.cannot.be.greather.than.max.length=Min length cannot be greather than max
error.DynamicFieldDescriptor.min.and.max.number.must.be.defined.simultaneously=Min and max number must be defined simultaneously
error.DynamicFieldDescriptor.min.number.cannot.be.greather.than.max.length=Min number cannot be greather than max
error.DynamicField.duplicate=The domain object has multiple relations with dynamic field, when it should only have one
error.DynamicFieldDescriptor.cannot.delete.with.field.instances=Cannot delete dynamic field when already exists data associated
error.DynamicFieldDescriptor.duplicate=Already exists other dynamic field with the same code


org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.ApprovedCourses = Number of Approved Courses
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.ApprovedCredits = Min. Credits Approved
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.FlunkedCredits = Max. Credits Flunked
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.FlunkedCurricularCourses = Max. Credits Flunked in Specific Courses
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.RuleTransitionOr = "OR" Rule Composition
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.StudentStatuteExecutiveRule = Validate Statute
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.EnrolmentYears = Number of Enrolment Years
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.EnrolmentsInCurricularYear = Min. Enrolments in Curricular Year
org.fenixedu.academic.domain.curricularRules.curricularPeriod.transition.MinimumPartialAverage = Minimum Partial Average

org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsEnroledAsFirstTime = Max. Credits in Courses Enroled for the First Time
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInCurricularPeriod = Max. Credits Enroled in Curricular Period
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsNotEnroled = Max. Credits to Complete Curricular Year
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriod = Max. Credits Enroled
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForHighestCurricularYear = Max. Credits Enroled by Curricular Year (regarding to the highest enrolment)
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForFlunkedStudent = Max. Credits Enroled for Flunked Students
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodByRegistrationData = Max. Credits Enroled for New Students
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForPartialRegime = Max. Credits Enroled for Students in Partial Regime
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForStatutes = Max. Credits Enroled for Students with Statutes
org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.CreditsInEnrolmentPeriodForRegistrationProtocols = Max. Credits Enroled for Students with Agreements


label.BlockEnrolmentByPreviousEnrolmentConditions=Condition-Based Enrolment Block: Previous Enrollments in {0} state
curricularRules.ruleExecutors.BlockEnrolmentByPreviousEnrolmentConditionsExecutor.error.found.previous.enrolments.matching.conditions=Cannot enrol in {0} because there are previous enrolments in state {1}


label.BlockEnrolmentInAdvancedCurricularCourses=Block Enrolment in Advanced Curricular Units
curricularRules.ruleExecutors.BlockEnrolmentInAdvancedCurricularCoursesExecutor.error.cannot.enrol.in.advanced.curricular.courses=Cannot enrol in advanced curricular units


label.UnavailableForEnrolmentRule=Unavailable for Enrolment


label.RecommendedRoute = Recommended Route


org.fenixedu.academic.domain.Enrolment = Enrolment
org.fenixedu.academic.domain.OptionalEnrolment = Free Optional Enrolment
org.fenixedu.academic.domain.studentCurriculum.Credits = Credits
org.fenixedu.academic.domain.studentCurriculum.Equivalence = Equivalence
org.fenixedu.academic.domain.studentCurriculum.Substitution = Substitution
org.fenixedu.academic.domain.studentCurriculum.InternalSubstitution = Internal Substitution
org.fenixedu.academic.domain.studentCurriculum.Dismissal = Credits
org.fenixedu.academic.domain.studentCurriculum.OptionalDismissal = Optional Credits

label.creditsTransfer = Credits Transfer

org.fenixedu.academic.domain.curricularRules.curricularPeriod.enrolment.MinCreditsInEnrolmentPeriod=Min Credits Enroled
label.MinCreditsInEnrolmentPeriod=You must enrol at least to {0} ECTS. You are enroled to {1} ECTS.

label.inGroup = in the Group

error.unenrolment.not.possible.student.already.in.marksheet = The student cannot be unenroled because a grade has already been assigned to them in a marksheet for this course.
error.RegistrationHistoryReport.nextExecutionYear.null = Next execution year is not configured